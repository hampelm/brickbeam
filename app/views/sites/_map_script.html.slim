javascript:
  $(function() {
    var i, j, k, circle, pin;

    // Set up the pin icon
    var pinIcon = L.icon({
      iconUrl: '#{asset_url("icons/map-icon.png")}',

      iconSize:     [20, 39], // size of the icon
      iconAnchor:   [15, 38], // point of the icon which will correspond to marker's location
      popupAnchor:  [-3, -10] // point from which the popup should open relative to the iconAnchor
    });


    // Set up the map
    L.mapbox.accessToken = 'pk.eyJ1IjoibWF0dGgiLCJhIjoicGFzV1ZkWSJ9.KeK3hKmM52XpUEHHx_F8NQ';
    var map = L.mapbox.map('sites-map')
      .setView([42.373364, -83.076553], 12) // detroit
      .addControl(L.mapbox.geocoderControl('mapbox.places'));
    L.mapbox.styleLayer('mapbox://styles/matth/cijg1tef5000a92kfbti9hsfk').addTo(map);
    map.scrollWheelZoom.disable();

    var circle_options = {
        color: '#f2d03b',      // Stroke color
        opacity: 1,         // Stroke opacity
        weight: 0,         // Stroke weight
        fillColor: '#f2d03b',  // Fill color
        fillOpacity: 0.6    // Fill opacity
    };

    // Pull unique tags from the list of sites
    // A bit hokey because the data structure isn't ideal
    function getSiteTags(sites) {
      for (i = 0; i < sites.length; i++) {
        var tags = [];
        for (j = 0; j < sites[i].projects.length; j++) {
          for (k = 0; k < sites[i].projects[j].tags.length; k++) {
            var tag = sites[i].projects[j].tags[k].name;
            // Skip duplicate tags
            if (tags.indexOf(name) === -1) {
              tags.push(tag);
            }
          }
        }
        sites[i].tags = tags;
      }
    }

    function uniqueTags(sites) {
      var tags = [];
      _.each(sites, function(site) {
        tags = tags.concat(site.tags);
      });
      return _.chain(tags).uniq().sort().value();
    }

    // Get the markers and tags
    var sites = #{{ @site_json }};

    // Set up the tag filter
    getSiteTags(sites);
    var tags = uniqueTags(sites);
    _.each(tags, function(tag) {
      $('#projectTypeDropdown li').append('<a>' + tag  + '</a>');
    });

    // Add the markers to the map
    var markers = new L.LayerGroup();
    markers.addTo(map);

    function addSites(filter) {
      // Clean out any existing markers
      markers.clearLayers();

      // Add the locations
      for (i = 0; i < sites.length; i++) {
        var site = sites[i];
        if (!site.lat) continue; // skip sites without a location

        // If a filter is active, apply it to filter out
        // any unwanted sites.
        if (filter) {
          var skip = false;
          _.each(filter, function(value, key) {
            if (site[key] !== value) {
              skip = true;
            }

            // Special case for tag filters
            if (key === 'tag') {
              if (site.tags.indexOf(value) !== -1) {
                skip = false;
              }
            }
          });

          if (skip) {
            continue;
          }
        }

        var link;
        if (site.title) {
          link = '<a href="/sites/' + site.id + '">' + site.title + '</a>';
        } else {
          link = '<a href="/sites/' + site.id + '">' + site.building_type + '</a>';
        }
        if (site.photo_file_name) {
          // TODO
          // var link = '<a href="/sites/' + sites[i].id + '">';
        }

        // Add the circle
        circle = L.circle([site.lat, site.lng], 600, circle_options)
          .bindPopup(link, {
            className: 'bragPopup'
          })
          .addTo(map);

        // Add the pin
        pin = L.marker([site.lat, site.lng], {icon: pinIcon})
          .bindPopup(link, {
            className: 'bragPopup'
          })
          .addTo(map);

        markers.addLayer(circle);
        markers.addLayer(pin);
      }
    }

    // Handle dropdowns selecting the sites
    $('#siteTypeDropdown a').click(function() {
      $target = $(event.target);
      var filter = $target.html();
      if (filter === 'Any') {
        addSites();
        return;
      }
      addSites({
        building_type: filter
      });
    });
    $('#siteSizeDropdown a').click(function() {
      $target = $(event.target);
      var filter = $target.html();
      if (filter === 'Any') {
        addSites();
        return;
      }
      addSites({
        building_size: filter
      });
    });

    $('#projectTypeDropdown a').click(function() {
      $target = $(event.target);
      var filter = $target.html();
      if (filter === 'Any') {
        addSites();
        return;
      }
      addSites({
        tag: filter
      });
    });

    addSites();

  });
